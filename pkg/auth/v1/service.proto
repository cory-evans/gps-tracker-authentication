syntax = "proto3";

package pkg.auth.v1;

option go_package = "github.com/cory-evans/gps-tracker-authentication/pkg/auth/v1;authv1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "Authentication Service";
		version: "1.0";
	};
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
		security: {
			key: "ApiKeyAuth";
			value: {
				type: TYPE_API_KEY;
				in: IN_HEADER;
				name: "Authorization";
			};
		}
	}
};

service AuthService {
	rpc GetUser(GetUserRequest) returns (GetUserResponse) {
		option (google.api.http) = {
			get: "/user/{id}"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: {
				security_requirement: {
					key: "ApiKeyAuth",
					value: {}
				}
			}
		};
	}
	rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
		option (google.api.http) = {
			post: "/user/create",
			body: "*";
		};
	}
	rpc SignIn(SignInRequest) returns (SignInResponse) {
		option (google.api.http) = {
			post: "/signin",
			body: "*";
		};
	}

	rpc SignOut(SignOutRequest) returns (SignOutResponse) {
		option (google.api.http) = {
			post: "/signout"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: {
				security_requirement: {
					key: "ApiKeyAuth",
					value: {}
				}
			}
		};
	}

	rpc CreateDevice(CreateDeviceRequest) returns (CreateDeviceResponse) {
		option (google.api.http) = {
			post: "/device/create",
			body: "*";
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: {
				security_requirement: {
					key: "ApiKeyAuth",
					value: {}
				}
			}
		};
	}
	rpc GetDevice(GetDeviceRequest) returns (GetDeviceResponse) {
		option (google.api.http) = {
			get: "/device/{device_id}",
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: {
				security_requirement: {
					key: "ApiKeyAuth",
					value: {}
				}
			}
		};
	}
	rpc EditDevice(EditDeviceRequest) returns (EditDeviceResponse) {
		option (google.api.http) = {
			post: "/device/{device_id}/edit",
			body: "*";
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: {
				security_requirement: {
					key: "ApiKeyAuth",
					value: {}
				}
			}
		};
	}
	rpc GetOwnedDevices(GetOwnedDevicesRequest) returns (GetOwnedDevicesResponse) {
		option (google.api.http) = {
			get: "/devices"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: {
				security_requirement: {
					key: "ApiKeyAuth",
					value: {}
				}
			}
		};
	}
}


message User {
	string user_id = 1;
	string display_name = 2;
	string email = 3;
}

message UserSession {
	string session_id = 1;
	string refresh_token = 2;
	string user_id = 3;
	int64 expires_at = 4;
}

message GetUserRequest {
	string id = 1;
}

message GetUserResponse {
	User user = 1;
}

message CreateUserRequest {
	string display_name = 1;
	string email = 2;

	string password = 3;
}

message CreateUserResponse {
	User user = 1;
}

message SignInRequest {
	string email = 1;
	string password = 2;
}
message SignInResponse {
	string token = 1;
	string refresh_token = 2;
}

message SignOutRequest {
}

message SignOutResponse {
	string status = 1;
}

message Device {
	string device_id = 1;
	string owner_id = 2;
	string name = 3;
}

message CreateDeviceRequest {
	string device_name = 2;
}

message CreateDeviceResponse {
	string token = 1;
	Device device = 2;
}

message GetDeviceRequest {
	string device_id = 1;
}

message GetDeviceResponse {
	Device device = 1;
}

message EditDeviceRequest {
	string device_id = 1;
	string device_name = 2;
}

message EditDeviceResponse {
	Device device = 1;
}

message GetOwnedDevicesRequest {}
message GetOwnedDevicesResponse {
	repeated Device devices = 1;
}